/*
 * SchillingerGUI.java
 *
 * Created on June 10, 2009, 3:19 PM
 */
package schillingerapp;

import javax.swing.*;
import java.awt.*;
import javax.swing.filechooser.FileFilter;
import java.io.*;

/**
 *
 * @author  anparks
 */
public class SchillingerGUI extends javax.swing.JFrame {

    public JFileChooser fc;
    public String input;
    public String output;
    public String key;
    public boolean findKey;

    /** Creates new form SchillingerGUI */
    public SchillingerGUI() {
        initComponents();

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        inputLabel = new javax.swing.JLabel();
        generateMusicButton = new javax.swing.JButton();
        inputTextField = new javax.swing.JTextField();
        inputButton = new javax.swing.JButton();
        keyLabel = new javax.swing.JLabel();
        checkBox = new javax.swing.JCheckBox();
        keyField = new javax.swing.JTextField();
        outputLabel = new javax.swing.JLabel();
        resultTextField = new javax.swing.JTextField();
        resultButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        afterGenerateTextField = new javax.swing.JTextArea();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        inputLabel.setText("Please load midi File:");

        generateMusicButton.setText("Generate Music");
        generateMusicButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateMusicButtonActionPerformed(evt);
            }
        });

        inputTextField.setText("/home/prhayman/NetBeansProjects/SchillingerApp/fourBarMelody.mid");
        inputTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputTextFieldActionPerformed(evt);
            }
        });

        inputButton.setText("Browse");
        inputButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputButtonActionPerformed(evt);
            }
        });

        keyLabel.setText("Please enter key: (Ex. AMajor)");

        checkBox.setSelected(true);
        checkBox.setText("Find Key automatically");

        outputLabel.setText("Save results as:");

        resultTextField.setText("TestResults.mid");
        resultTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resultTextFieldActionPerformed(evt);
            }
        });

        resultButton.setText("Browse");
        resultButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resultButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Input Matched to Schillinger Pattern:");

        afterGenerateTextField.setBackground(new java.awt.Color(238, 238, 238));
        afterGenerateTextField.setColumns(20);
        afterGenerateTextField.setRows(5);
        afterGenerateTextField.setBorder(null);
        jScrollPane1.setViewportView(afterGenerateTextField);

<<<<<<< .mine
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 564, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(inputLabel)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(keyField, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(checkBox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 180, Short.MAX_VALUE)
                                .addComponent(generateMusicButton))
                            .addComponent(outputLabel)
                            .addComponent(keyLabel)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(resultTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 471, Short.MAX_VALUE)
                                    .addComponent(inputTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 471, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(inputButton)
                                    .addComponent(resultButton)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 564, Short.MAX_VALUE)))
=======
        schPatMatchTextArea.setColumns(25);
        schPatMatchTextArea.setEditable(false);
        schPatMatchTextArea.setFont(schPatMatchTextArea.getFont());
        schPatMatchTextArea.setRows(4);
        schPatMatchTextArea.setAutoscrolls(false);
        schPatMatchTextArea.setBorder(null);
        schPatMatchTextArea.setOpaque(false);
        schPatMatchTextArea.setRequestFocusEnabled(false);
        jScrollPane1.setViewportView(schPatMatchTextArea);

        jLabel2.setText("Permutation Information:");

        permInfoTextArea.setColumns(25);
        permInfoTextArea.setEditable(false);
        permInfoTextArea.setFont(permInfoTextArea.getFont());
        permInfoTextArea.setRows(5);
        permInfoTextArea.setAutoscrolls(false);
        permInfoTextArea.setBorder(null);
        permInfoTextArea.setOpaque(false);
        permInfoTextArea.setRequestFocusEnabled(false);
        jScrollPane3.setViewportView(permInfoTextArea);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 545, Short.MAX_VALUE)
                    .addComponent(inputLabel)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(resultTextField)
                            .addComponent(inputTextField))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(resultButton)
                            .addComponent(inputButton)))
                    .addComponent(keyLabel)
                    .addComponent(outputLabel)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(keyField, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkBox))
                    .addComponent(generateMusicButton, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 545, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 545, Short.MAX_VALUE))
>>>>>>> .r236
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(inputLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputButton, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addComponent(outputLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resultTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resultButton, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(keyLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(keyField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkBox)
                    .addComponent(generateMusicButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                .addContainerGap())
        );

<<<<<<< .mine
=======
        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);
        getContentPane().add(jSeparator2, java.awt.BorderLayout.PAGE_START);

>>>>>>> .r236
        pack();
    }// </editor-fold>//GEN-END:initComponents

private void generateMusicButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateMusicButtonActionPerformed

    String rawInput = inputTextField.getText();
    String rawOutput = resultTextField.getText();
    findKey = checkBox.isSelected();
    key = keyField.getText();

    input = rawInput.substring(rawInput.lastIndexOf("/") + 1);
//    System.out.println("Input: " + rawInput + "\nOutput: " + rawOutput);
    output = rawOutput.substring(rawOutput.lastIndexOf("/") + 1);

    KeyFinder finder = new KeyFinder();



    TestHarness tester = new TestHarness();
    if (findKey) {
        tester.startToFinish(input, output);

    } else {
        int intKey = finder.stringToIndex(key);
        tester.startToFinish(input, output, intKey);
    }

        Converter converter = new Converter();
        String musicString = "C5/0.375 D5/0.125 E5/0.25 F5/0.25";
        BinaryPattern binPat = converter.convertMusicStringToBinaryPattern(musicString);
        HitListDB hitList = new HitListDB(binPat);
        hitList.sortDB();
<<<<<<< .mine
        String topMatches = "";
        topMatches += hitList.topMatchesString(1) + "\n";
        topMatches += musicGen.permInfo;
=======
        String topMatches = "Input Matched to Pattern:"+ hitList.topMatchesString(1).charAt(hitList.topMatchesString(1).length()-3) + "\n";
        topMatches += hitList.topMatchesString(1);
>>>>>>> .r236
        System.out.println(topMatches);
        afterGenerateTextField.setText(topMatches);

        MusicGenerator musicGen = new MusicGenerator();
        musicGen.generatePossibilities(musicString);
        permInfoTextArea.setText(musicGen.permInfo);
        


    //Run shell script to covert TestResults.mid to TestResults
    try {
      
        String cmd = "/home/grkatz/NetBeansProjects/SchillingerApp/CIAscript.sh";

        Runtime run = Runtime.getRuntime();
        Process pr = run.exec(cmd);
<<<<<<< .mine
    //pr.waitFor();
    //System.exit(0);
    } catch (Exception e) {
=======
        //pr.waitFor();
        //System.exit(0);
    } catch (Exception e) {
>>>>>>> .r236
        System.out.println(e);
        System.exit(-1);
    }

}//GEN-LAST:event_generateMusicButtonActionPerformed

private void inputButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputButtonActionPerformed
    fc = new JFileChooser();
    fc.addChoosableFileFilter(new MidiFileFilter());

    if (evt.getSource() == inputButton) {
        int returnVal = fc.showOpenDialog(SchillingerGUI.this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            input = fc.getSelectedFile().toString();
            inputTextField.setText(input);

            if (resultTextField.getText().equals("TestResults.mid")) {
                resultTextField.setText(getDirectory(input) + "TestResults.mid");
            }
        }
    }
}//GEN-LAST:event_inputButtonActionPerformed

private void resultButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resultButtonActionPerformed
    fc = new JFileChooser();
    fc.addChoosableFileFilter(new MidiFileFilter());


    if (evt.getSource() == resultButton) {
        int returnVal = fc.showOpenDialog(SchillingerGUI.this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            output = fc.getSelectedFile().toString();
            resultTextField.setText(output);
        }
    }

}//GEN-LAST:event_resultButtonActionPerformed

private void resultTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resultTextFieldActionPerformed
    // TODO add your handling code here:
}//GEN-LAST:event_resultTextFieldActionPerformed

private void inputTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputTextFieldActionPerformed
    // TODO add your handling code here:
}//GEN-LAST:event_inputTextFieldActionPerformed

<<<<<<< .mine
=======
private void formWindowClosed(java.awt.event.WindowEvent evt) {
    System.exit(0);
}
>>>>>>> .r236
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new SchillingerGUI().setVisible(true);
                
            }
        });
    }

    public String getDirectory(String fileName) {

        return fileName.substring(0, fileName.lastIndexOf("/") + 1);

    }

    public String getInputFile() {
        return input;
    }

    public String getOutputFile() {
        return output;
    }

    public Boolean findKey() {
        return findKey;
    }

    public String getKey() {
        return key;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea afterGenerateTextField;
    private javax.swing.JCheckBox checkBox;
    private javax.swing.JButton generateMusicButton;
    private javax.swing.JButton inputButton;
    private javax.swing.JLabel inputLabel;
    private javax.swing.JTextField inputTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField keyField;
    private javax.swing.JLabel keyLabel;
    private javax.swing.JLabel outputLabel;
    private javax.swing.JButton resultButton;
    private javax.swing.JTextField resultTextField;
    // End of variables declaration//GEN-END:variables
}
